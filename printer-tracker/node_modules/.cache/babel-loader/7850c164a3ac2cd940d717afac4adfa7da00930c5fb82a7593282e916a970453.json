{"ast":null,"code":"var _jsxFileName = \"/home/lauder/Full-Print-Track/printer-tracker/src/DragNDrop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Lines from \"./Line\";\nimport useWebSocket from 'react-use-websocket';\nimport throttle from 'lodash.throttle';\nimport { Cursor } from \"./Components/Cursor\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst renderCursors = users => {\n  return Object.keys(users).map(uuid => {\n    const user = users[uuid];\n    return /*#__PURE__*/_jsxDEV(Cursor, {\n      point: [user.state.x, user.state.y]\n    }, uuid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  });\n};\nconst renderMachines = (users, handleDragEnter, handleDragStart, handleDragOver, handleDrop) => {\n  const allGroups = Object.keys(users).reduce((acc, uuid) => {\n    const userGroups = users[uuid].state.groups || [];\n    userGroups.forEach(group => {\n      if (!acc.includes(group)) {\n        acc.push(group);\n      }\n    });\n    return acc;\n  }, []);\n  const allMachines = Object.keys(users).reduce((acc, uuid) => {\n    const userMachines = users[uuid].state.machines || [];\n    userMachines.forEach(machine => {\n      if (!acc.some(m => m.id === machine.id)) {\n        acc.push(machine);\n      }\n    });\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drag-n-drop\",\n    children: allGroups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dnd-group\",\n      onDragOver: handleDragOver,\n      onDrop: e => handleDrop(e, group),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-title\",\n        children: group\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), allMachines.filter(machine => machine.group === group).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: item.id,\n        className: \"dnd-item\",\n        draggable: true,\n        onDragStart: e => handleDragStart(e, item),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Lines, {\n          group: item.group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this))]\n    }, group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\nfunction DragNDrop({\n  machines,\n  groups,\n  username\n}) {\n  _s();\n  const WS_URL = 'ws://localhost:8000';\n  const {\n    sendJsonMessage,\n    lastJsonMessage\n  } = useWebSocket(WS_URL, {\n    queryParams: {\n      username\n    },\n    machines: machines\n  });\n  const THROTTLE = 50;\n  const sendJsonMessageThrottle = useRef(throttle(sendJsonMessage, THROTTLE));\n  useEffect(() => {\n    sendJsonMessage({\n      x: 0,\n      y: 0,\n      machines,\n      groups\n    });\n    window.addEventListener(\"mousemove\", e => {\n      sendJsonMessageThrottle.current({\n        x: e.clientX,\n        y: e.clientY,\n        machines,\n        groups\n      });\n    });\n  }, [machines, groups, sendJsonMessageThrottle]);\n  const [list, setList] = useState(machines);\n  const [dragging, setDragging] = useState(null);\n  const handleDragStart = (e, item) => {\n    setDragging(item);\n    e.dataTransfer.setData('text/plain', item.id);\n  };\n  const handleDragEnter = (e, group) => {\n    e.preventDefault();\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, group) => {\n    e.preventDefault();\n    const id = e.dataTransfer.getData('text/plain');\n    const updatedMachines = list.map(machine => machine.id === parseInt(id) ? {\n      ...machine,\n      group: group\n    } : machine);\n    setList(updatedMachines);\n    sendJsonMessage({\n      type: 'update-group',\n      machine: {\n        ...dragging,\n        group: group\n      }\n    });\n    setDragging(null);\n  };\n  useEffect(() => {\n    if (lastJsonMessage) {\n      const updatedList = Object.keys(lastJsonMessage).reduce((acc, uuid) => {\n        return acc.concat(lastJsonMessage[uuid].state.machines || []);\n      }, []);\n      setList(updatedList);\n    }\n  }, [lastJsonMessage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: lastJsonMessage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderCursors(lastJsonMessage), renderMachines(lastJsonMessage, handleDragEnter, handleDragStart, handleDragOver, handleDrop)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(DragNDrop, \"biuOz6QvbAqx9JiiudI8POV3PUQ=\", false, function () {\n  return [useWebSocket];\n});\n_c = DragNDrop;\nexport default DragNDrop;\nvar _c;\n$RefreshReg$(_c, \"DragNDrop\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Lines","useWebSocket","throttle","Cursor","jsxDEV","_jsxDEV","Fragment","_Fragment","renderCursors","users","Object","keys","map","uuid","user","point","state","x","y","fileName","_jsxFileName","lineNumber","columnNumber","renderMachines","handleDragEnter","handleDragStart","handleDragOver","handleDrop","allGroups","reduce","acc","userGroups","groups","forEach","group","includes","push","allMachines","userMachines","machines","machine","some","m","id","className","children","onDragOver","onDrop","e","filter","item","draggable","onDragStart","value","DragNDrop","username","_s","WS_URL","sendJsonMessage","lastJsonMessage","queryParams","THROTTLE","sendJsonMessageThrottle","window","addEventListener","current","clientX","clientY","list","setList","dragging","setDragging","dataTransfer","setData","preventDefault","getData","updatedMachines","parseInt","type","updatedList","concat","_c","$RefreshReg$"],"sources":["/home/lauder/Full-Print-Track/printer-tracker/src/DragNDrop.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Lines from \"./Line\";\r\nimport useWebSocket from 'react-use-websocket';\r\nimport throttle from 'lodash.throttle';\r\nimport { Cursor } from \"./Components/Cursor\";\r\n\r\nconst renderCursors = users => {\r\n    return Object.keys(users).map(uuid => {\r\n        const user = users[uuid];\r\n\r\n        return (\r\n            <Cursor key={uuid} point={[user.state.x, user.state.y]} />\r\n        );\r\n    });\r\n};\r\n\r\nconst renderMachines = (users, handleDragEnter, handleDragStart, handleDragOver, handleDrop) => {\r\n    const allGroups = Object.keys(users).reduce((acc, uuid) => {\r\n        const userGroups = users[uuid].state.groups || [];\r\n        userGroups.forEach(group => {\r\n            if (!acc.includes(group)) {\r\n                acc.push(group);\r\n            }\r\n        });\r\n        return acc;\r\n    }, []);\r\n\r\n    const allMachines = Object.keys(users).reduce((acc, uuid) => {\r\n        const userMachines = users[uuid].state.machines || [];\r\n        userMachines.forEach(machine => {\r\n            if (!acc.some(m => m.id === machine.id)) {\r\n                acc.push(machine);\r\n            }\r\n        });\r\n        return acc;\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"drag-n-drop\">\r\n            {allGroups.map(group => (\r\n                <div key={group} className=\"dnd-group\" onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, group)}>\r\n                    <div className=\"group-title\">{group}</div>\r\n                    {allMachines.filter(machine => machine.group === group).map(item => (\r\n                        <div\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            className=\"dnd-item\"\r\n                            draggable\r\n                            onDragStart={(e) => handleDragStart(e, item)}\r\n                        >\r\n                            <p>{item.value}</p>\r\n                            <Lines group={item.group} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction DragNDrop({ machines, groups, username }) {\r\n    const WS_URL = 'ws://localhost:8000';\r\n    const { sendJsonMessage, lastJsonMessage } = useWebSocket(WS_URL, {\r\n        queryParams: { username },\r\n        machines: machines\r\n    });\r\n\r\n    const THROTTLE = 50;\r\n    const sendJsonMessageThrottle = useRef(throttle(sendJsonMessage, THROTTLE));\r\n\r\n    useEffect(() => {\r\n        sendJsonMessage({\r\n            x: 0,\r\n            y: 0,\r\n            machines,\r\n            groups\r\n        });\r\n        window.addEventListener(\"mousemove\", e => {\r\n            sendJsonMessageThrottle.current({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                machines,\r\n                groups\r\n            });\r\n        });\r\n    }, [machines, groups, sendJsonMessageThrottle]);\r\n\r\n    const [list, setList] = useState(machines);\r\n    const [dragging, setDragging] = useState(null);\r\n\r\n    const handleDragStart = (e, item) => {\r\n        setDragging(item);\r\n        e.dataTransfer.setData('text/plain', item.id);\r\n    };\r\n\r\n    const handleDragEnter = (e, group) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleDrop = (e, group) => {\r\n        e.preventDefault();\r\n        const id = e.dataTransfer.getData('text/plain');\r\n        const updatedMachines = list.map(machine =>\r\n            machine.id === parseInt(id) ? { ...machine, group: group } : machine\r\n        );\r\n        setList(updatedMachines);\r\n        sendJsonMessage({ type: 'update-group', machine: { ...dragging, group: group } });\r\n        setDragging(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (lastJsonMessage) {\r\n            const updatedList = Object.keys(lastJsonMessage).reduce((acc, uuid) => {\r\n                return acc.concat(lastJsonMessage[uuid].state.machines || []);\r\n            }, []);\r\n            setList(updatedList);\r\n        }\r\n    }, [lastJsonMessage]);\r\n\r\n    return (\r\n        <>\r\n            {lastJsonMessage ? (\r\n                <>\r\n                    {renderCursors(lastJsonMessage)}\r\n                    {renderMachines(lastJsonMessage, handleDragEnter, handleDragStart, handleDragOver, handleDrop)}\r\n                </>\r\n            ) : (\r\n                <div>Loading...</div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DragNDrop;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}