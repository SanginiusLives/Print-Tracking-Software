{"ast":null,"code":"var _jsxFileName = \"/home/lauder/Full-Print-Track/printer-tracker/src/Components/Machines.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Lines from \"./Lines\";\nimport PrintLines from \"./PrintLines\";\nimport socketIO from \"socket.io-client\";\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = socketIO.connect(\"http://localhost:5000\");\nfunction Machines() {\n  _s();\n  const [machines, setMachines] = useState({});\n  const [selectedItems, setSelectedItems] = useState({});\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await fetch(\"http://localhost:5000/api\");\n        const json = await data.json();\n        setMachines(json);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n  useEffect(() => {\n    socket.on(\"machines\", data => {\n      setMachines(data);\n    });\n  }, []);\n  function handleDragEnd({\n    destination,\n    source\n  }) {\n    if (!destination) return;\n    if (destination.index === source.index && destination.droppableId === source.droppableId) return;\n\n    // TODO: Handle drag and drop logic here\n\n    socket.emit('taskDragged', {\n      source,\n      destination\n    });\n  }\n  const handleSelect = (machineId, level, isChecked, value) => {\n    setSelectedItems(prevItems => {\n      const newItems = {\n        ...prevItems\n      };\n      if (!newItems[machineId]) {\n        newItems[machineId] = [];\n      }\n      if (isChecked) {\n        newItems[machineId] = [...newItems[machineId], {\n          level,\n          value: parseInt(value, 10)\n        }];\n      } else {\n        newItems[machineId] = newItems[machineId].filter(item => item.value !== parseInt(value, 10) || item.level !== level);\n      }\n      return newItems;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drag-n-drop\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: Object.entries(machines).map(([machineId, machine]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dnd-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-title\",\n          children: machine.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: machine.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [machine.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: `${item.id}`,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"dnd-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(Lines, {\n                  group: machine.title,\n                  machineId: machine.id,\n                  onSelect: (level, isChecked, value) => handleSelect(machine.id, level, isChecked, value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(PrintLines, {\n                  selectedLines: selectedItems[machine.id] || []\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, machineId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Machines, \"hRvb6DcnsIGvv/cq7SRec/hWsAE=\");\n_c = Machines;\nexport default Machines;\nvar _c;\n$RefreshReg$(_c, \"Machines\");","map":{"version":3,"names":["React","useState","useEffect","Lines","PrintLines","socketIO","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","socket","connect","Machines","_s","machines","setMachines","selectedItems","setSelectedItems","getData","data","fetch","json","error","console","log","on","handleDragEnd","destination","source","index","droppableId","emit","handleSelect","machineId","level","isChecked","value","prevItems","newItems","parseInt","filter","item","className","children","onDragEnd","Object","entries","map","machine","title","fileName","_jsxFileName","lineNumber","columnNumber","id","provided","ref","innerRef","droppableProps","items","draggableId","draggableProps","dragHandleProps","group","onSelect","selectedLines","placeholder","_c","$RefreshReg$"],"sources":["/home/lauder/Full-Print-Track/printer-tracker/src/Components/Machines.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Lines from \"./Lines\";\r\nimport PrintLines from \"./PrintLines\";\r\nimport socketIO from \"socket.io-client\";\r\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\r\n\r\nconst socket = socketIO.connect(\"http://localhost:5000\");\r\n\r\nfunction Machines() {\r\n  const [machines, setMachines] = useState({});\r\n  const [selectedItems, setSelectedItems] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const data = await fetch(\"http://localhost:5000/api\");\r\n        const json = await data.json();\r\n        setMachines(json);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"machines\", (data) => {\r\n      setMachines(data);\r\n    });\r\n  }, []);\r\n\r\n  function handleDragEnd({ destination, source }) {\r\n    if (!destination) return;\r\n    if (destination.index === source.index && destination.droppableId === source.droppableId) return;\r\n\r\n    // TODO: Handle drag and drop logic here\r\n\r\n    socket.emit('taskDragged', {\r\n      source,\r\n      destination,\r\n    });\r\n  }\r\n\r\n  const handleSelect = (machineId, level, isChecked, value) => {\r\n    setSelectedItems((prevItems) => {\r\n      const newItems = { ...prevItems };\r\n      if (!newItems[machineId]) {\r\n        newItems[machineId] = [];\r\n      }\r\n      if (isChecked) {\r\n        newItems[machineId] = [...newItems[machineId], { level, value: parseInt(value, 10) }];\r\n      } else {\r\n        newItems[machineId] = newItems[machineId].filter(\r\n          (item) => item.value !== parseInt(value, 10) || item.level !== level\r\n        );\r\n      }\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"drag-n-drop\">\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        {Object.entries(machines).map(([machineId, machine]) => (\r\n          <div key={machineId} className=\"dnd-group\">\r\n            <div className='group-title'>{machine.title}</div>\r\n            <Droppable droppableId={machine.id}>\r\n              {(provided) => (\r\n                <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {machine.items.map((item, index) => (\r\n                    <Draggable key={item.id} draggableId={`${item.id}`} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          className=\"dnd-item\"\r\n                        >\r\n                          <p>{item.value}</p>\r\n                          <Lines\r\n                            group={machine.title}\r\n                            machineId={machine.id}\r\n                            onSelect={(level, isChecked, value) =>\r\n                              handleSelect(machine.id, level, isChecked, value)\r\n                            }\r\n                          />\r\n                          <PrintLines selectedLines={selectedItems[machine.id] || []} />\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        ))}\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Machines;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}