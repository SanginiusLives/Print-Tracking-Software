{"ast":null,"code":"var _jsxFileName = \"/home/lauder/printer-tracker/src/DragNDrop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DragNDrop({\n  data\n}) {\n  _s();\n  const [list, setList] = useState(data);\n  const [dragging, setDragging] = useState(false);\n  useEffect(() => {\n    setList(data);\n  }, [setList, data]);\n  const dragItem = useRef();\n  const dragItemNode = useRef();\n  const handletDragStart = (e, item) => {\n    console.log('Starting to drag', item);\n    dragItemNode.current = e.target;\n    dragItemNode.current.addEventListener('dragend', handleDragEnd);\n    dragItem.current = item;\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n  const handleDragEnter = (e, targetItem) => {\n    console.log('Entering a drag target', targetItem);\n    if (dragItemNode.current !== e.target) {\n      console.log('Target is NOT the same as dragged item');\n      setList(oldList => {\n        let newList = JSON.parse(JSON.stringify(oldList));\n        newList[targetItem.grpI].items.splice(targetItem.itemI, 0, newList[dragItem.current.grpI].items.splice(dragItem.current.itemI, 1)[0]);\n        dragItem.current = targetItem;\n        localStorage.setItem('List', JSON.stringify(newList));\n        return newList;\n      });\n    }\n  };\n  const handleDragEnd = e => {\n    setDragging(false);\n    dragItem.current = null;\n    dragItemNode.current.removeEventListener('dragend', handleDragEnd);\n    dragItemNode.current = null;\n  };\n  const getStyles = item => {\n    if (dragItem.current.grpI === item.grpI && dragItem.current.itemI === item.itemI) {\n      return \"dnd-item current\";\n    }\n    return \"dnd-item\";\n  };\n  if (list) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-n-drop\",\n      children: list.map((grp, grpI) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragEnter: dragging && !grp.items.length ? e => handleDragEnter(e, {\n          grpI,\n          itemI: 0\n        }) : null,\n        className: \"dnd-group\",\n        children: grp.items.map((item, itemI) => /*#__PURE__*/_jsxDEV(\"div\", {\n          draggable: true,\n          onDragStart: e => handletDragStart(e, {\n            grpI,\n            itemI\n          }),\n          onDragEnter: dragging ? e => {\n            handleDragEnter(e, {\n              grpI,\n              itemI\n            });\n          } : null,\n          className: dragging ? getStyles({\n            grpI,\n            itemI\n          }) : \"dnd-item\",\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this))\n      }, grp.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}\n_s(DragNDrop, \"gT4ETdSBNWGYZQ3PE95XZcIfJN0=\");\n_c = DragNDrop;\nexport default DragNDrop;\nvar _c;\n$RefreshReg$(_c, \"DragNDrop\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","DragNDrop","data","_s","list","setList","dragging","setDragging","dragItem","dragItemNode","handletDragStart","e","item","console","log","current","target","addEventListener","handleDragEnd","setTimeout","handleDragEnter","targetItem","oldList","newList","JSON","parse","stringify","grpI","items","splice","itemI","localStorage","setItem","removeEventListener","getStyles","className","children","map","grp","onDragEnter","length","draggable","onDragStart","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/home/lauder/printer-tracker/src/DragNDrop.js"],"sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\r\n\r\nfunction DragNDrop({data}) {\r\n\r\n    const [list, setList] = useState(data); \r\n    const [dragging, setDragging] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setList(data);\r\n    }, [setList, data])\r\n\r\n    const dragItem = useRef();\r\n    const dragItemNode = useRef();\r\n    \r\n    const handletDragStart = (e, item) => {\r\n        console.log('Starting to drag', item)\r\n\r\n        dragItemNode.current = e.target;\r\n        dragItemNode.current.addEventListener('dragend', handleDragEnd)\r\n        dragItem.current = item;\r\n\r\n        setTimeout(() => {\r\n            setDragging(true); \r\n        },0)       \r\n    }\r\n    const handleDragEnter = (e, targetItem) => {\r\n        console.log('Entering a drag target', targetItem)\r\n        if (dragItemNode.current !== e.target) {\r\n            console.log('Target is NOT the same as dragged item')\r\n            setList(oldList => {\r\n                let newList = JSON.parse(JSON.stringify(oldList))\r\n                newList[targetItem.grpI].items.splice(targetItem.itemI, 0, newList[dragItem.current.grpI].items.splice(dragItem.current.itemI,1)[0])\r\n                dragItem.current = targetItem;\r\n                localStorage.setItem('List', JSON.stringify(newList));\r\n                return newList\r\n            })\r\n        }\r\n    }\r\n    const handleDragEnd = (e) => {\r\n        setDragging(false);\r\n        dragItem.current = null;\r\n        dragItemNode.current.removeEventListener('dragend', handleDragEnd)\r\n        dragItemNode.current = null;\r\n    }\r\n    const getStyles = (item) => {\r\n        if (dragItem.current.grpI === item.grpI && dragItem.current.itemI === item.itemI) {\r\n            return \"dnd-item current\"\r\n        }\r\n        return \"dnd-item\"\r\n    }\r\n\r\n    if (list) {\r\n        return (                \r\n            <div className=\"drag-n-drop\">\r\n            {list.map((grp, grpI) => (\r\n              <div key={grp.title} onDragEnter={dragging && !grp.items.length?(e) => handleDragEnter(e,{grpI, itemI: 0}):null} className=\"dnd-group\">\r\n                {grp.items.map((item, itemI) => (\r\n                  <div draggable key={item}  onDragStart={(e) => handletDragStart(e, {grpI, itemI})} onDragEnter={dragging?(e) => {handleDragEnter(e, {grpI, itemI})}:null} className={dragging?getStyles({grpI, itemI}):\"dnd-item\"}>\r\n                    {item}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n            </div>\r\n        )\r\n    } else { return null}\r\n\r\n}\r\n\r\nexport default DragNDrop;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}