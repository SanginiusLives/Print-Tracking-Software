{"ast":null,"code":"var _jsxFileName = \"/home/lauder/Full-Print-Track/printer-tracker/src/Components/Machines.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Lines from \"./Lines\";\nimport Message from \"./Message\";\nimport PrintLines from \"./PrintLines\";\nimport socketIO from \"socket.io-client\";\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:5000';\n\n//process.env.REACT_APP_BASE_URL\n\nconst socket = socketIO.connect(BASE_URL);\nfunction Machines() {\n  _s();\n  const [machines, setMachines] = useState({});\n  const [selectedItems, setSelectedItems] = useState({});\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await fetch(`${BASE_URL}/api`);\n        const json = await data.json();\n        setMachines(json);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n  useEffect(() => {\n    socket.on(\"machines\", data => {\n      setMachines(data);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"selectedLinesUpdated\", data => {\n      const {\n        machineId,\n        selectedLines\n      } = data;\n      setSelectedItems(prevSelectedItems => ({\n        ...prevSelectedItems,\n        [machineId]: selectedLines\n      }));\n    });\n  }, []);\n  function handleDragEnd({\n    destination,\n    source\n  }) {\n    if (!destination) return;\n    if (destination.index === source.index && destination.droppableId === source.droppableId) return;\n\n    // TODO: Handle drag and drop logic here\n\n    socket.emit('taskDragged', {\n      source,\n      destination\n    });\n  }\n  ;\n  const handleMessage = (machineId, group, message) => {\n    console.log(message);\n    socket.emit('messageUpdate', {\n      machineId,\n      group,\n      message\n    });\n  };\n  const handleSelect = (machineId, key, level, isChecked, value) => {\n    socket.emit('linesSelected', {\n      machineId,\n      key,\n      level,\n      isChecked,\n      value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-width\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-n-drop\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: handleDragEnd,\n        children: Object.entries(machines).map(([key, group]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dnd-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"group-title\",\n            children: group.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: group.title,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-grid\",\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              children: [group.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: `${item.id}`,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  className: \"dnd-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: item.value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Lines, {\n                    group: group.title,\n                    onSelect: (level, isChecked, value) => handleSelect(item.id, group.title, level, isChecked, value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(PrintLines, {\n                    selectedLines: selectedItems[item.id] || []\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Message, {\n                    onMessage: message => handleMessage(item.id, group, message)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Machines, \"RmmfY9/s/tb2Rl7P8sYyCmiHB4w=\");\n_c = Machines;\nexport default Machines;\nvar _c;\n$RefreshReg$(_c, \"Machines\");","map":{"version":3,"names":["React","useState","useEffect","Lines","Message","PrintLines","socketIO","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","BASE_URL","socket","connect","Machines","_s","machines","setMachines","selectedItems","setSelectedItems","getData","data","fetch","json","error","console","log","on","machineId","selectedLines","prevSelectedItems","handleDragEnd","destination","source","index","droppableId","emit","handleMessage","group","message","handleSelect","key","level","isChecked","value","className","children","onDragEnd","Object","entries","map","title","fileName","_jsxFileName","lineNumber","columnNumber","provided","ref","innerRef","droppableProps","items","item","draggableId","id","draggableProps","dragHandleProps","onSelect","onMessage","placeholder","_c","$RefreshReg$"],"sources":["/home/lauder/Full-Print-Track/printer-tracker/src/Components/Machines.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Lines from \"./Lines\";\r\nimport Message from \"./Message\";\r\nimport PrintLines from \"./PrintLines\";\r\nimport socketIO from \"socket.io-client\";\r\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\r\n\r\n\r\nconst BASE_URL = 'http://localhost:5000'\r\n\r\n//process.env.REACT_APP_BASE_URL\r\n\r\nconst socket = socketIO.connect(BASE_URL);\r\n\r\nfunction Machines() {\r\n  const [machines, setMachines] = useState({});\r\n  const [selectedItems, setSelectedItems] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const data = await fetch(`${BASE_URL}/api`);\r\n        const json = await data.json();\r\n        setMachines(json);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"machines\", (data) => {\r\n      setMachines(data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"selectedLinesUpdated\", (data) => {\r\n        const {machineId, selectedLines} = data;\r\n       setSelectedItems((prevSelectedItems) => ({\r\n        ...prevSelectedItems,\r\n        [machineId]: selectedLines\r\n       }));\r\n    });\r\n  }, [])\r\n\r\n  function handleDragEnd({ destination, source }) {\r\n    if (!destination) return;\r\n    if (destination.index === source.index && destination.droppableId === source.droppableId) return;\r\n\r\n    // TODO: Handle drag and drop logic here\r\n\r\n    socket.emit('taskDragged', {\r\n      source,\r\n      destination,\r\n    });\r\n  };\r\n\r\n  const handleMessage = (machineId, group, message) => {\r\n    console.log(message)\r\n    socket.emit('messageUpdate', {\r\n        machineId,\r\n        group,\r\n        message\r\n    })\r\n  }\r\n\r\n  const handleSelect = (machineId, key, level, isChecked, value) => {\r\n    socket.emit('linesSelected', {\r\n        machineId,\r\n        key,\r\n        level,\r\n        isChecked,\r\n        value\r\n      })\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-width\">\r\n    <div className=\"drag-n-drop\">\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        {Object.entries(machines).map(([key, group]) => (\r\n          <div key={key} className=\"dnd-group\">\r\n            <h3 className='group-title'>{group.title}</h3>\r\n            <Droppable droppableId={group.title}>\r\n              {(provided) => (\r\n                <div className=\"group-grid\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {group.items.map((item, index) => (\r\n                    <Draggable key={item.id} draggableId={`${item.id}`} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          className=\"dnd-item\"\r\n                        >\r\n                          <b>{item.value}</b>\r\n                          <Lines group={group.title} onSelect={(level, isChecked, value) => handleSelect(item.id, group.title, level, isChecked, value)} />\r\n                          <PrintLines selectedLines={selectedItems[item.id]|| []} />\r\n                          <Message onMessage={(message) => handleMessage(item.id, group, message)}/>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        ))}\r\n      </DragDropContext>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Machines;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}