{"ast":null,"code":"var _jsxFileName = \"/home/lauder/printer-tracker/src/Line.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Lines({\n  group\n}) {\n  var larges = [];\n  var cells = [];\n  const queueTypes = [{\n    level: \"Priority\",\n    type: \"priority\"\n  }];\n  if (group === \"Larges\") {\n    for (let i = 0; i < 7; i++) {\n      larges.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 37\n        }, this), i + 1]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"lines\",\n        children: larges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n  if (group === \"Cells\") {\n    for (let i = 0; i < 14; i++) {\n      cells.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 36\n        }, this), i + 1]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"lines\",\n        children: cells\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: queueTypes.map(queue => /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c = Lines;\n;\nexport default Lines;\nvar _c;\n$RefreshReg$(_c, \"Lines\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Lines","group","larges","cells","queueTypes","level","type","i","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","queue","_c","$RefreshReg$"],"sources":["/home/lauder/printer-tracker/src/Line.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction Lines ({group}) {\r\n\r\n    var larges = [];\r\n    var cells = [];\r\n\r\n    const queueTypes = [{level: \"Priority\", type: \"priority\"}];\r\n\r\n\r\n    if (group === \"Larges\") {\r\n        for (let i = 0; i < 7; i++) {\r\n            larges.push(<li key={i}><input type=\"checkbox\" />{i + 1}</li>)\r\n        }\r\n\r\n        return (\r\n        <div>\r\n            <ul className=\"lines\">{larges}</ul>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    if (group === \"Cells\") {\r\n        for (let i=0; i < 14; i++ ) {\r\n            cells.push(<li key={i}><input type=\"checkbox\" />{i + 1}</li>)\r\n        }\r\n\r\n        return ( \r\n        <div>\r\n            <ul className=\"lines\">{cells}</ul>\r\n        </div>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           {queueTypes.map((queue) => (\r\n                <></>\r\n           ))} \r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Lines"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,KAAKA,CAAE;EAACC;AAAK,CAAC,EAAE;EAErB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,KAAK,GAAG,EAAE;EAEd,MAAMC,UAAU,GAAG,CAAC;IAACC,KAAK,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAU,CAAC,CAAC;EAG1D,IAAIL,KAAK,KAAK,QAAQ,EAAE;IACpB,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxBL,MAAM,CAACM,IAAI,eAACX,OAAA;QAAAY,QAAA,gBAAYZ,OAAA;UAAOS,IAAI,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAACN,CAAC,GAAG,CAAC;MAAA,GAAlCA,CAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsC,CAAC,CAAC;IAClE;IAEA,oBACAhB,OAAA;MAAAY,QAAA,eACIZ,OAAA;QAAIiB,SAAS,EAAC,OAAO;QAAAL,QAAA,EAAEP;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEV;EAEA,IAAIZ,KAAK,KAAK,OAAO,EAAE;IACnB,KAAK,IAAIM,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAG;MACxBJ,KAAK,CAACK,IAAI,eAACX,OAAA;QAAAY,QAAA,gBAAYZ,OAAA;UAAOS,IAAI,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAACN,CAAC,GAAG,CAAC;MAAA,GAAlCA,CAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsC,CAAC,CAAC;IACjE;IAEA,oBACAhB,OAAA;MAAAY,QAAA,eACIZ,OAAA;QAAIiB,SAAS,EAAC,OAAO;QAAAL,QAAA,EAAEN;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EACV;EAEA,oBACIhB,OAAA;IAAAY,QAAA,EACIL,UAAU,CAACW,GAAG,CAAEC,KAAK,iBACjBnB,OAAA,CAAAE,SAAA,mBAAI,CACR;EAAC;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd;AAACI,EAAA,GAvCQjB,KAAK;AAuCb;AAED,eAAeA,KAAK;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}