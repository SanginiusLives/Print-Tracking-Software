{"ast":null,"code":"var _jsxFileName = \"/home/lauder/Full-Print-Track/printer-tracker/src/Components/ListDownLoad.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListDownload() {\n  _s();\n  const BASE_URL = 'http://localhost:5000'; // Update this as needed\n  //process.env.REACT_APP_BASE_URL ||\n\n  const [list, setList] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/download`);\n        const data = await response.json();\n        setList(data.files); // Assuming the server returns { files: [...] }\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    getData();\n  }, []); // Add empty dependency array to run effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-width\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listContainer\",\n      children: list && list.length > 0 ? list.map((item, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"listItem\",\n        href: `${BASE_URL}/reports/${item}`,\n        download: true,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No files available for download.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(ListDownload, \"9FQm/8UeCQ+PCXeKOabgriiFNvc=\");\n_c = ListDownload;\nexport default ListDownload;\nvar _c;\n$RefreshReg$(_c, \"ListDownload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ListDownload","_s","BASE_URL","list","setList","getData","response","fetch","data","json","files","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","href","download","_c","$RefreshReg$"],"sources":["/home/lauder/Full-Print-Track/printer-tracker/src/Components/ListDownLoad.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction ListDownload() {\r\n    const BASE_URL =  'http://localhost:5000'; // Update this as needed\r\n    //process.env.REACT_APP_BASE_URL ||\r\n\r\n    \r\n\r\n    const [list, setList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const response = await fetch(`${BASE_URL}/download`);\r\n                const data = await response.json();\r\n                setList(data.files); // Assuming the server returns { files: [...] }\r\n            } catch (error) {\r\n                console.log(\"Error fetching data:\", error);\r\n            }\r\n        };\r\n        \r\n        getData();\r\n    }, []); // Add empty dependency array to run effect only once\r\n\r\n    return (\r\n        <div className=\"max-width\">\r\n            <h2>Available Reports</h2>\r\n\r\n            <div className=\"listContainer\">\r\n            {list && list.length > 0 ? (\r\n                list.map((item, index) => (\r\n                    <a key={index} className=\"listItem\" href={`${BASE_URL}/reports/${item}`} download>\r\n                        {item}\r\n                    </a>\r\n                ))\r\n            ) : (\r\n                <p>No files available for download.</p>\r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListDownload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAI,uBAAuB,CAAC,CAAC;EAC3C;;EAIA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMQ,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,WAAW,CAAC;QACpD,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,OAAO,CAACI,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC9C;IACJ,CAAC;IAEDN,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIN,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1BpB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC7BZ,IAAI,IAAIA,IAAI,CAACiB,MAAM,GAAG,CAAC,GACpBjB,IAAI,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjBxB,OAAA;QAAee,SAAS,EAAC,UAAU;QAACU,IAAI,EAAE,GAAGtB,QAAQ,YAAYoB,IAAI,EAAG;QAACG,QAAQ;QAAAV,QAAA,EAC5EO;MAAI,GADDC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC,gBAEFpB,OAAA;QAAAgB,QAAA,EAAG;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACzC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClB,EAAA,CAvCQD,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAyCrB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}