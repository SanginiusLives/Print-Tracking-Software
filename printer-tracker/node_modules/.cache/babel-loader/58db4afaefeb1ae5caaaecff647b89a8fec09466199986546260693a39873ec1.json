{"ast":null,"code":"var _jsxFileName = \"/home/lauder/printer-tracker/src/DragNDrop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DragNDrop({\n  data\n}) {\n  _s();\n  const [list, setList] = useState(data);\n  const [dragging, setDragging] = useState(false);\n\n  // const dragItem = useRef();\n  // const dragNode = useRef();\n\n  const handleDragStart = e => {\n    e.target.addEventListener('dragend', handleDragEnd(e));\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  // const handleDragEnter = (e, params) => {\n  //     console.log('Entering', params)\n  //     const currentItem = dragItem.current;\n  //     console.log(currentItem)\n  //     if (e.target !== dragNode.current) {\n  //         console.log(\"Target is not the same\")\n  //         // setList(oldList => {\n  //         //     let newList = JSON.parse(JSON.stringify(oldList));\n  //         //     newList[params.grpI].items.splice(params.itemI, 0, newList[currentItem.grpI].items.splice(currentItem.itemI, 1)[0]);\n  //         //     dragItem.current = params\n  //         //     return newList\n  //         // });\n\n  //         // setList([...list, (list[currentItem.itemI - 1].currentItem.grp = params.grp)])\n\n  //         setList([\n  //             ...list, list[currentItem.itemI]\n  //         ])\n\n  //         // console.log(setList)\n  //     }\n  // }\n\n  const handleDragEnd = e => {\n    setDragging(false);\n    e.target.removeEventListener('dragend', handleDragEnd);\n  };\n  const getStyles = (e, params) => {\n    const currentItem = e.target;\n    if (currentItem.grpI === params.grpI && currentItem.itemI === params.itemI) {\n      return 'current dnd-item';\n    }\n    return 'dnd-item';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drag-n-drop\",\n    children: data.map((grp, grpI) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dnd-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-title\",\n        children: grp.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), grp.items.map((item, itemI) => /*#__PURE__*/_jsxDEV(\"div\", {\n        draggable: true,\n        onDragStart: e => {\n          handleDragStart(e, {\n            grpI,\n            itemI\n          });\n        },\n        className: dragging ? getStyles(e, {\n          grpI,\n          itemI\n        }) : \"dnd-item\",\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this))]\n    }, grp.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(DragNDrop, \"mbREwytKauiYxSFRaOyepCb+jFI=\");\n_c = DragNDrop;\nexport default DragNDrop;\nvar _c;\n$RefreshReg$(_c, \"DragNDrop\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","DragNDrop","data","_s","list","setList","dragging","setDragging","handleDragStart","e","target","addEventListener","handleDragEnd","setTimeout","removeEventListener","getStyles","params","currentItem","grpI","itemI","className","children","map","grp","title","fileName","_jsxFileName","lineNumber","columnNumber","items","item","draggable","onDragStart","_c","$RefreshReg$"],"sources":["/home/lauder/printer-tracker/src/DragNDrop.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\r\n\r\nfunction DragNDrop ({data}) {\r\n    const [list, setList] = useState(data);\r\n    const [dragging, setDragging] = useState(false);\r\n\r\n    // const dragItem = useRef();\r\n    // const dragNode = useRef();\r\n\r\n    const handleDragStart = (e) => {\r\n        e.target.addEventListener('dragend', handleDragEnd(e));\r\n        setTimeout(() => {\r\n            setDragging(true)\r\n        }, 0);\r\n    };\r\n\r\n    // const handleDragEnter = (e, params) => {\r\n    //     console.log('Entering', params)\r\n    //     const currentItem = dragItem.current;\r\n    //     console.log(currentItem)\r\n    //     if (e.target !== dragNode.current) {\r\n    //         console.log(\"Target is not the same\")\r\n    //         // setList(oldList => {\r\n    //         //     let newList = JSON.parse(JSON.stringify(oldList));\r\n    //         //     newList[params.grpI].items.splice(params.itemI, 0, newList[currentItem.grpI].items.splice(currentItem.itemI, 1)[0]);\r\n    //         //     dragItem.current = params\r\n    //         //     return newList\r\n    //         // });\r\n\r\n    //         // setList([...list, (list[currentItem.itemI - 1].currentItem.grp = params.grp)])\r\n\r\n    //         setList([\r\n    //             ...list, list[currentItem.itemI]\r\n    //         ])\r\n\r\n    //         // console.log(setList)\r\n    //     }\r\n    // }\r\n\r\n    const handleDragEnd = (e) => {\r\n        setDragging(false);\r\n        e.target.removeEventListener('dragend', handleDragEnd);\r\n        \r\n    }\r\n\r\n    const getStyles = (e, params) => {\r\n        const currentItem = e.target;\r\n        if (currentItem.grpI === params.grpI && currentItem.itemI === params.itemI) {\r\n            return 'current dnd-item'\r\n        }\r\n        return 'dnd-item'\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"drag-n-drop\">\r\n    {data.map((grp, grpI) => (\r\n      <div key={grp.title} className='dnd-group'>\r\n      <div className='group-title'>{grp.title}</div>\r\n        {grp.items.map((item, itemI) => (\r\n        <div draggable \r\n            onDragStart={(e) => {handleDragStart(e, {grpI, itemI})}}\r\n            key={item} \r\n            className={dragging?getStyles(e, {grpI, itemI}):\"dnd-item\"}>\r\n            {item}\r\n          </div>\r\n    ))}\r\n      </div>\r\n    ))}\r\n</div>\r\n    )\r\n\r\n}\r\n\r\nexport default DragNDrop"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,SAASA,CAAE;EAACC;AAAI,CAAC,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACK,IAAI,CAAC;EACtC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA;;EAEA,MAAMW,eAAe,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEC,aAAa,CAACH,CAAC,CAAC,CAAC;IACtDI,UAAU,CAAC,MAAM;MACbN,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,EAAE,CAAC,CAAC;EACT,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMK,aAAa,GAAIH,CAAC,IAAK;IACzBF,WAAW,CAAC,KAAK,CAAC;IAClBE,CAAC,CAACC,MAAM,CAACI,mBAAmB,CAAC,SAAS,EAAEF,aAAa,CAAC;EAE1D,CAAC;EAED,MAAMG,SAAS,GAAGA,CAACN,CAAC,EAAEO,MAAM,KAAK;IAC7B,MAAMC,WAAW,GAAGR,CAAC,CAACC,MAAM;IAC5B,IAAIO,WAAW,CAACC,IAAI,KAAKF,MAAM,CAACE,IAAI,IAAID,WAAW,CAACE,KAAK,KAAKH,MAAM,CAACG,KAAK,EAAE;MACxE,OAAO,kBAAkB;IAC7B;IACA,OAAO,UAAU;EAErB,CAAC;EAED,oBACInB,OAAA;IAAKoB,SAAS,EAAC,aAAa;IAAAC,QAAA,EAC/BnB,IAAI,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEL,IAAI,kBAClBlB,OAAA;MAAqBoB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC1CrB,OAAA;QAAKoB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEE,GAAG,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAC3CL,GAAG,CAACM,KAAK,CAACP,GAAG,CAAC,CAACQ,IAAI,EAAEX,KAAK,kBAC3BnB,OAAA;QAAK+B,SAAS;QACVC,WAAW,EAAGvB,CAAC,IAAK;UAACD,eAAe,CAACC,CAAC,EAAE;YAACS,IAAI;YAAEC;UAAK,CAAC,CAAC;QAAA,CAAE;QAExDC,SAAS,EAAEd,QAAQ,GAACS,SAAS,CAACN,CAAC,EAAE;UAACS,IAAI;UAAEC;QAAK,CAAC,CAAC,GAAC,UAAW;QAAAE,QAAA,EAC1DS;MAAI,GAFAA,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CACV,CAAC;IAAA,GATUL,GAAG,CAACC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUd,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGN;AAACzB,EAAA,CAtEQF,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAwElB,eAAeA,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}