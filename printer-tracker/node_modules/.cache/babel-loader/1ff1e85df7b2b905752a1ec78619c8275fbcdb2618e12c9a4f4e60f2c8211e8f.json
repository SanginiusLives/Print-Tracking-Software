{"ast":null,"code":"var _jsxFileName = \"/home/lauder/Full-Print-Track/printer-tracker/src/DragNDrop.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport useWebSocket from 'react-use-websocket';\nimport Lines from \"./Line\";\nimport { Cursor } from \"./Components/Cursor\";\nimport throttle from 'lodash.throttle';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DragNDrop({\n  machines,\n  groups,\n  username\n}) {\n  _s();\n  const WS_URL = 'ws://localhost:8000';\n  const {\n    sendJsonMessage,\n    lastJsonMessage\n  } = useWebSocket(WS_URL, {\n    queryParams: {\n      username\n    }\n  });\n  const THROTTLE = 50;\n  const sendJsonMessageThrottle = useRef(throttle(sendJsonMessage, THROTTLE));\n  const [list, setList] = useState(machines);\n  const [dragging, setDragging] = useState(false);\n  useEffect(() => {\n    sendJsonMessage({\n      x: 0,\n      y: 0,\n      machines,\n      groups\n    });\n    const handleMouseMove = e => {\n      sendJsonMessageThrottle.current({\n        x: e.clientX,\n        y: e.clientY,\n        machines,\n        groups\n      });\n    };\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, [machines, groups, sendJsonMessageThrottle]);\n  const handleDragStart = e => {\n    setDragging(e.target);\n  };\n  const handleDragEnter = (e, group) => {\n    // Update the group of the machine being dragged\n    const machineId = parseInt(e.target.id);\n    const updatedMachines = machines.map(machine => {\n      if (machine.id === machineId) {\n        return {\n          ...machine,\n          group\n        };\n      }\n      return machine;\n    });\n    setList(updatedMachines);\n  };\n  const handleDragEnd = e => {\n    setDragging(false);\n  };\n  if (lastJsonMessage) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderCursors(lastJsonMessage), renderMachines(lastJsonMessage, handleDragEnter, handleDragStart)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drag-n-drop\",\n    children: groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dnd-group\",\n      onDragEnter: e => handleDragEnter(e, group),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-title\",\n        children: group\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), machines.filter(machine => machine.group === group).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: item.id,\n        className: \"dnd-item\",\n        draggable: true,\n        onDragStart: e => handleDragStart(e),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Lines, {\n          group: item.group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this))]\n    }, group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(DragNDrop, \"x05JCxdNVk5QeqXtF4UXRxSVULQ=\", false, function () {\n  return [useWebSocket];\n});\n_c = DragNDrop;\nconst renderCursors = users => {\n  return Object.keys(users).map(uuid => /*#__PURE__*/_jsxDEV(Cursor, {\n    point: [users[uuid].x, users[uuid].y]\n  }, uuid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this));\n};\nconst renderMachines = (users, handleDragEnter, handleDragStart) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.keys(users).map(uuid => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: uuid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\nexport default DragNDrop;\n{/* <div key={uuid} className=\"drag-n-drop\">\r\n                    {users[uuid].groups.map(group => (\r\n                        <div\r\n                            key={group}\r\n                            className=\"dnd-group\"\r\n                            onDragEnter={(e) => handleDragEnter(e, group)}\r\n                        >\r\n                            <div className='group-title'>{group}</div>\r\n                            {users[uuid].machines.filter(machine => machine.group === group).map(item => (\r\n                                <div\r\n                                    key={item.id}\r\n                                    id={item.id}\r\n                                    className=\"dnd-item\"\r\n                                    draggable\r\n                                    onDragStart={(e) => handleDragStart(e)}\r\n                                >\r\n                                    <p>{item.value}</p>\r\n                                    <Lines group={item.group} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div> */}\n\n// const renderMachines = (users, handleDragEnter, handleDragStart) => {\n//     // Collect all unique groups from all users\n//     const allGroups = Object.keys(users).reduce((acc, uuid) => {\n//         const userGroups = users[uuid].groups;\n//         userGroups.forEach(group => {\n//             if (!acc.includes(group)) {\n//                 acc.push(group);\n//             }\n//         });\n//         return acc;\n//     }, []);\n\n//     return (\n//         <div className=\"user-machines\">\n//             {allGroups.map(group => (\n//                 <div key={group} className=\"dnd-group\" onDragEnter={(e) => handleDragEnter(e, group)}>\n//                     <div className='group-title'>{group}</div>\n//                     {users[uuid].machines.filter(machine => machine.group === group).map(item => (\n//                         <div\n//                             key={item.id}\n//                             id={item.id}\n//                             className=\"dnd-item\"\n//                             draggable\n//                             onDragStart={(e) => handleDragStart(e)}\n//                         >\n//                             <p>{item.value}</p>\n//                             <Lines group={item.group} />\n//                         </div>\n//                     ))}\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// };\nvar _c;\n$RefreshReg$(_c, \"DragNDrop\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useWebSocket","Lines","Cursor","throttle","Fragment","_Fragment","jsxDEV","_jsxDEV","DragNDrop","machines","groups","username","_s","WS_URL","sendJsonMessage","lastJsonMessage","queryParams","THROTTLE","sendJsonMessageThrottle","list","setList","dragging","setDragging","x","y","handleMouseMove","e","current","clientX","clientY","window","addEventListener","removeEventListener","handleDragStart","target","handleDragEnter","group","machineId","parseInt","id","updatedMachines","map","machine","handleDragEnd","children","renderCursors","renderMachines","className","onDragEnter","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","draggable","onDragStart","value","_c","users","Object","keys","uuid","point","$RefreshReg$"],"sources":["/home/lauder/Full-Print-Track/printer-tracker/src/DragNDrop.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport useWebSocket from 'react-use-websocket';\r\nimport Lines from \"./Line\";\r\nimport { Cursor } from \"./Components/Cursor\";\r\nimport throttle from 'lodash.throttle';\r\n\r\nfunction DragNDrop({ machines, groups, username }) {\r\n    const WS_URL = 'ws://localhost:8000';\r\n    const { sendJsonMessage, lastJsonMessage } = useWebSocket(WS_URL, {\r\n        queryParams: { username }\r\n    });\r\n\r\n    const THROTTLE = 50;\r\n    const sendJsonMessageThrottle = useRef(throttle(sendJsonMessage, THROTTLE));\r\n\r\n    const [list, setList] = useState(machines);\r\n    const [dragging, setDragging] = useState(false);\r\n\r\n    useEffect(() => {\r\n        sendJsonMessage({\r\n            x: 0,\r\n            y: 0,\r\n            machines,\r\n            groups\r\n        });\r\n\r\n        const handleMouseMove = (e) => {\r\n            sendJsonMessageThrottle.current({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                machines,\r\n                groups\r\n            });\r\n        };\r\n\r\n        window.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mousemove\", handleMouseMove);\r\n        };\r\n    }, [machines, groups, sendJsonMessageThrottle]);\r\n\r\n    const handleDragStart = (e) => {\r\n        setDragging(e.target);\r\n    };\r\n\r\n    const handleDragEnter = (e, group) => {\r\n        // Update the group of the machine being dragged\r\n        const machineId = parseInt(e.target.id);\r\n        const updatedMachines = machines.map(machine => {\r\n            if (machine.id === machineId) {\r\n                return { ...machine, group };\r\n            }\r\n            return machine;\r\n        });\r\n        setList(updatedMachines);\r\n    };\r\n\r\n    const handleDragEnd = (e) => {\r\n        setDragging(false);\r\n    };\r\n\r\n    if (lastJsonMessage) {\r\n        return (\r\n            <>\r\n                {renderCursors(lastJsonMessage)}\r\n                {renderMachines(lastJsonMessage, handleDragEnter, handleDragStart)}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"drag-n-drop\">\r\n            {groups.map(group => (\r\n                <div\r\n                    key={group}\r\n                    className='dnd-group'\r\n                    onDragEnter={(e) => handleDragEnter(e, group)}\r\n                >\r\n                    <div className='group-title'>{group}</div>\r\n                    {machines.filter(machine => machine.group === group).map(item => (\r\n                        <div\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            className=\"dnd-item\"\r\n                            draggable\r\n                            onDragStart={(e) => handleDragStart(e)}\r\n                        >\r\n                            <p>{item.value}</p>\r\n                            <Lines group={item.group} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst renderCursors = (users) => {\r\n    return Object.keys(users).map(uuid => (\r\n        <Cursor key={uuid} point={[users[uuid].x, users[uuid].y]} />\r\n    ));\r\n};\r\n\r\nconst renderMachines = (users, handleDragEnter, handleDragStart) => {\r\n    return (\r\n        <>\r\n            {Object.keys(users).map(uuid => (\r\n                <div>\r\n                    {uuid}\r\n                </div>\r\n                \r\n            )\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DragNDrop;\r\n{/* <div key={uuid} className=\"drag-n-drop\">\r\n                    {users[uuid].groups.map(group => (\r\n                        <div\r\n                            key={group}\r\n                            className=\"dnd-group\"\r\n                            onDragEnter={(e) => handleDragEnter(e, group)}\r\n                        >\r\n                            <div className='group-title'>{group}</div>\r\n                            {users[uuid].machines.filter(machine => machine.group === group).map(item => (\r\n                                <div\r\n                                    key={item.id}\r\n                                    id={item.id}\r\n                                    className=\"dnd-item\"\r\n                                    draggable\r\n                                    onDragStart={(e) => handleDragStart(e)}\r\n                                >\r\n                                    <p>{item.value}</p>\r\n                                    <Lines group={item.group} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div> */}\r\n\r\n                // const renderMachines = (users, handleDragEnter, handleDragStart) => {\r\n                //     // Collect all unique groups from all users\r\n                //     const allGroups = Object.keys(users).reduce((acc, uuid) => {\r\n                //         const userGroups = users[uuid].groups;\r\n                //         userGroups.forEach(group => {\r\n                //             if (!acc.includes(group)) {\r\n                //                 acc.push(group);\r\n                //             }\r\n                //         });\r\n                //         return acc;\r\n                //     }, []);\r\n                \r\n                //     return (\r\n                //         <div className=\"user-machines\">\r\n                //             {allGroups.map(group => (\r\n                //                 <div key={group} className=\"dnd-group\" onDragEnter={(e) => handleDragEnter(e, group)}>\r\n                //                     <div className='group-title'>{group}</div>\r\n                //                     {users[uuid].machines.filter(machine => machine.group === group).map(item => (\r\n                //                         <div\r\n                //                             key={item.id}\r\n                //                             id={item.id}\r\n                //                             className=\"dnd-item\"\r\n                //                             draggable\r\n                //                             onDragStart={(e) => handleDragStart(e)}\r\n                //                         >\r\n                //                             <p>{item.value}</p>\r\n                //                             <Lines group={item.group} />\r\n                //                         </div>\r\n                //                     ))}\r\n                //                 </div>\r\n                //             ))}\r\n                //         </div>\r\n                //     );\r\n                // };\r\n                "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}